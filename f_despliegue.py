{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNxhQUu6/kqup3GsfKigW5r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Nota:** Debido a que Google Colab ejecuta el código en un entorno virtual remoto sin acceso directo a puertos locales, no es posible exponer un servidor web (como Flask) directamente a través de localhost o 127.0.0.1 para ser accesible desde internet. Por esta razón, se utilizó ngrok, una herramienta que crea un túnel seguro y público hacia el puerto local donde corre la aplicación Flask en Colab.\n","\n","Ngrok genera una URL pública temporal que redirige las solicitudes externas a la aplicación en Colab, permitiendo así probar y usar la API REST desplegada desde cualquier dispositivo con conexión a internet. Esta técnica es especialmente útil para desarrollo, demostraciones y pruebas rápidas sin necesidad de configurar un servidor o infraestructura en la nube."],"metadata":{"id":"ZC0h7Ilf2DF0"}},{"cell_type":"markdown","source":["# Conexión al Drive"],"metadata":{"id":"3PJknqOV41bh"}},{"cell_type":"code","source":["try:\n","  from google.colab import drive\n","  drive.mount('/content/drive')\n","  print(\"Drive montado correctamente.\")\n","except ModuleNotFoundError:\n","  print(\"No estás en Colab, omitiendo montaje de Drive.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o4-ESB8zfRju","executionInfo":{"status":"ok","timestamp":1748215551347,"user_tz":300,"elapsed":29993,"user":{"displayName":"Miguel Sanchez","userId":"14457415460426627983"}},"outputId":"221f0245-0b96-4907-f6a1-12c283df6c04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Drive montado correctamente.\n"]}]},{"cell_type":"markdown","source":["# Instalar ngrok, Flask y otras dependencias necesarias en Colab"],"metadata":{"id":"CzEvWjtq40G_"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2qzgUlaXVT1K","executionInfo":{"status":"ok","timestamp":1748215783170,"user_tz":300,"elapsed":8371,"user":{"displayName":"Miguel Sanchez","userId":"14457415460426627983"}},"outputId":"12b1c39c-92a5-4fac-eb6d-90d321fe8180"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: flask in /usr/local/lib/python3.11/dist-packages (3.1.1)\n","Requirement already satisfied: flask-ngrok in /usr/local/lib/python3.11/dist-packages (0.0.25)\n","Requirement already satisfied: pyngrok in /usr/local/lib/python3.11/dist-packages (7.2.8)\n","Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.11/dist-packages (from flask) (1.9.0)\n","Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.11/dist-packages (from flask) (8.2.0)\n","Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from flask) (2.2.0)\n","Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.11/dist-packages (from flask) (3.1.6)\n","Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.11/dist-packages (from flask) (3.0.2)\n","Requirement already satisfied: werkzeug>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from flask) (3.1.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from flask-ngrok) (2.32.3)\n","Requirement already satisfied: PyYAML>=5.1 in /usr/local/lib/python3.11/dist-packages (from pyngrok) (6.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->flask-ngrok) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->flask-ngrok) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->flask-ngrok) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->flask-ngrok) (2025.4.26)\n"]}],"source":["!pip install flask flask-ngrok pyngrok  # instalar Flask (ya viene en Colab), Flask-Ngrok y Pyngrok\n","\n"]},{"cell_type":"markdown","source":["# Configurar ngrok con tu authtoken"],"metadata":{"id":"TAboGvNC4tHZ"}},{"cell_type":"code","source":["from pyngrok import ngrok\n","\n","# Establecer el authtoken de ngrok\n","ngrok.set_auth_token(\"2xbk7WOrmufC0f4tJkzCLE2aZik_64uqgUhLYXMrxQRTLc8Xd\")\n"],"metadata":{"id":"Ayna9dHlw5TI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Crear la aplicación Flask y el endpoint para predicción"],"metadata":{"id":"i8b7Sjkd4ouD"}},{"cell_type":"code","source":["import pickle, json\n","from flask import Flask, request, jsonify\n","import numpy as np\n","import pandas as pd\n","from flask_ngrok import run_with_ngrok\n","from pyngrok import ngrok\n","import joblib\n"],"metadata":{"id":"kzaKX34LVfJV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Carga el modelo entrenado\n","modelo = joblib.load('/content/drive/MyDrive/UdeA/Salud/models/logistic_model.pkl')"],"metadata":{"id":"lL0sCufip6QQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Carga el archivo X_train codificado\n","X_train = pd.read_csv('/content/drive/MyDrive/UdeA/Salud/data/X_train.csv')\n","\n","\n","# Obtén la lista de columnas\n","columnas_train = list(X_train.columns)\n","\n","# Guarda esta lista en un archivo JSON\n","with open('/content/drive/MyDrive/UdeA/Salud/models/columnas_train.json', 'w') as f:\n","    json.dump(columnas_train, f)\n","\n","print(\"Columnas guardadas correctamente.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-mG4r6vcd40a","executionInfo":{"status":"ok","timestamp":1748215791984,"user_tz":300,"elapsed":84,"user":{"displayName":"Miguel Sanchez","userId":"14457415460426627983"}},"outputId":"cb36807f-ecf2-4701-977a-36ee5c75e947"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Columnas guardadas correctamente.\n"]}]},{"cell_type":"code","source":["# Crear la aplicación Flask\n","app = Flask(__name__)\n"],"metadata":{"id":"Qd3xthdKVreJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@app.route('/')\n","def home():\n","    return \"La API de predicción está activa\""],"metadata":{"id":"eshOD0XcxsFE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@app.route('/predict', methods=['POST'])\n","def predict():\n","    try:\n","        # Obtener los datos JSON enviados en la petición POST\n","        datos_entrada = request.get_json()\n","        df = pd.DataFrame(datos_entrada)\n","\n","        # Codificar variables categóricas\n","        df_encoded = pd.get_dummies(df)\n","\n","        # Asegurar que las columnas estén igual que en el entrenamiento\n","        for col in columnas_train:\n","            if col not in df_encoded.columns:\n","                df_encoded[col] = 0\n","\n","        # Asegurar que las columnas estén en el orden correcto\n","        df_encoded = df_encoded[columnas_train]\n","\n","        # Realizar la predicción con el modelo\n","        prediccion = modelo.predict(df_encoded)\n","\n","        # Devolver la predicción\n","        return jsonify({'prediccion': int(prediccion[0])})\n","\n","    except Exception as e:\n","        return jsonify({'error': str(e)})\n","\n","if __name__ == '__main__':\n","    app.run(debug=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RbnFVXNvm15p","executionInfo":{"status":"ok","timestamp":1748215932200,"user_tz":300,"elapsed":109805,"user":{"displayName":"Miguel Sanchez","userId":"14457415460426627983"}},"outputId":"e6f1179a-85c6-4ce0-8053-a2be3851e316"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * Serving Flask app '__main__'\n"," * Debug mode: on\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:\u001b[31m\u001b[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\u001b[0m\n"," * Running on http://127.0.0.1:5000\n","INFO:werkzeug:\u001b[33mPress CTRL+C to quit\u001b[0m\n","INFO:werkzeug: * Restarting with stat\n"]}]},{"cell_type":"markdown","source":["# Ejecutar el servidor Flask en Colab y exponerlo con ngrok"],"metadata":{"id":"Mqq18fxo4dDk"}},{"cell_type":"code","source":["import threading, time\n","from pyngrok import ngrok"],"metadata":{"id":"4O906wrMnCOW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Iniciar el servidor Flask en un hilo separado\n","port = 5000  # puerto donde Flask correrá\n","thread = threading.Thread(target=app.run, kwargs={\"port\": port, \"use_reloader\": False})\n","thread.daemon = True\n","thread.start()"],"metadata":{"id":"UMclO1aqnENK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Esperar un momento para que el servidor Flask inicie\n","time.sleep(2)"],"metadata":{"id":"i5uZJvR3nE5K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Iniciar el túnel ngrok\n","public_url = ngrok.connect(port).public_url\n","print(f\" * Servidor Flask desplegado públicamente en: {public_url}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qmAX7XL3yrnj","executionInfo":{"status":"ok","timestamp":1748215976951,"user_tz":300,"elapsed":257,"user":{"displayName":"Miguel Sanchez","userId":"14457415460426627983"}},"outputId":"7b065c45-da1c-44e3-ad48-72a6ab85c13e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * Servidor Flask desplegado públicamente en: https://9e53-34-48-101-29.ngrok-free.app\n"]}]},{"cell_type":"markdown","source":["#  Probar la API con una solicitud POST"],"metadata":{"id":"h41PYH4L2kbA"}},{"cell_type":"code","source":["import requests"],"metadata":{"id":"EtannJM_nP7q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Usar la URL proporcionada por ngrok\n","url = public_url + \"/predict\""],"metadata":{"id":"37GIzJQzyzC6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Ejemplo de datos de entrada (cambiar según las columnas y datos de tu modelo)\n","datos = {\n","    \"age\": [30],\n","    \"gender\": [\"Female\"],\n","    \"employment_status\": [\"Employed\"],\n","    \"work_environment\": [\"Remote\"],\n","    \"mental_health_history\": [\"Yes\"],\n","    \"seeks_treatment\": [\"No\"],\n","    \"stress_level\": [6],\n","    \"sleep_hours\": [7],\n","    \"physical_activity_days\": [3],\n","    \"depression_score\": [10],\n","    \"anxiety_score\": [5],\n","    \"social_support_score\": [40],\n","    \"productivity_score\": [75]\n","}\n","\n","response = requests.post(url, json=datos)\n","print(response.json())  # Mostrar la predicción"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DpOemobny3rs","executionInfo":{"status":"ok","timestamp":1748216025292,"user_tz":300,"elapsed":140,"user":{"displayName":"Miguel Sanchez","userId":"14457415460426627983"}},"outputId":"ef616e02-0238-4294-ac98-32036801b6d4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:127.0.0.1 - - [25/May/2025 23:33:45] \"POST /predict HTTP/1.1\" 200 -\n"]},{"output_type":"stream","name":"stdout","text":["{'prediccion': 0}\n"]}]}]}